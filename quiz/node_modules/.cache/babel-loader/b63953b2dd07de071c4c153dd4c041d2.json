{"ast":null,"code":"var _jsxFileName = \"/Users/demidzabrodsky/Documents/projects/react/5 projects/quiz/src/components/CreateQuiz.js\",\n    _s = $RefreshSig$();\n\nimport { CreateForm } from \"./CreateForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateQuiz = () => {\n  _s();\n\n  const [quiz, setQuiz] = useState({\n    title: \"\",\n    description: \"\",\n    questions: []\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Your Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        id: \"description\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"questions\",\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"questions\",\n        value: question,\n        onChange: event => handleIngredientChange(event, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateQuiz, \"FPlZL9ofWHTSxAcC8gulCrF8BRU=\");\n\n_c = CreateQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuiz\");","map":{"version":3,"names":["CreateForm","CreateQuiz","quiz","setQuiz","useState","title","description","questions","onSubmit","handleChange","map","question","index","event","handleIngredientChange","addQuestion"],"sources":["/Users/demidzabrodsky/Documents/projects/react/5 projects/quiz/src/components/CreateQuiz.js"],"sourcesContent":["import { CreateForm } from \"./CreateForm\";\n\nexport const CreateQuiz = () => {\n  const [quiz, setQuiz] = useState({\n    title: \"\",\n    description: \"\",\n    questions: [],\n  });\n\n  return (\n    <>\n      <h2>Create Your Quiz</h2>\n\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" name=\"title\" onChange={handleChange} />\n\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          name=\"description\"\n          id=\"description\"\n          onChange={handleChange}\n        ></textarea>\n\n        <label htmlFor=\"questions\">Questions</label>\n        {quiz.questions.map((question, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            name=\"questions\"\n            value={question}\n            onChange={(event) => handleIngredientChange(event, index)}\n          />\n        ))}\n        <button type=\"button\" onClick={addQuestion}>\n          Add Question\n        </button>\n        <button type=\"submit\">Create</button>\n      </form>\n    </>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;IAC/BC,KAAK,EAAE,EADwB;IAE/BC,WAAW,EAAE,EAFkB;IAG/BC,SAAS,EAAE;EAHoB,CAAD,CAAhC;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAM,QAAQ,EAAEC,QAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,OAAtB;QAA8B,IAAI,EAAC,OAAnC;QAA2C,QAAQ,EAAEC;MAArD;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE;QAAO,OAAO,EAAC,aAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QACE,IAAI,EAAC,aADP;QAEE,EAAE,EAAC,aAFL;QAGE,QAAQ,EAAEA;MAHZ;QAAA;QAAA;QAAA;MAAA,QALF,eAWE;QAAO,OAAO,EAAC,WAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,EAYGP,IAAI,CAACK,SAAL,CAAeG,GAAf,CAAmB,CAACC,QAAD,EAAWC,KAAX,kBAClB;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,WAHP;QAIE,KAAK,EAAED,QAJT;QAKE,QAAQ,EAAGE,KAAD,IAAWC,sBAAsB,CAACD,KAAD,EAAQD,KAAR;MAL7C,GACOA,KADP;QAAA;QAAA;QAAA;MAAA,QADD,CAZH,eAqBE;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEG,WAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF,eAwBE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAxBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAgCD,CAvCM;;GAAMd,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}